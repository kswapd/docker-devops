{"version":3,"sources":["webpack:///src/components/core/CoreAppEcharts.vue","webpack:///./src/components/core/CoreAppEcharts.vue?abb2","webpack:///./src/components/core/CoreAppEcharts.vue"],"names":["CoreAppEcharts","data","date","skill","time","text","value","resizeIds","id","width","tabName","timer","loading","heapMemoLast","nonHeapMemoLast","threadLast","heapMemoAllData","nonHeapMemoAllData","threadAllData","heapMemoShow","nonHeapMemoShow","threadShow","heapMemoData","nonHeapMemoData","threadData","computed","coreAppParams","resolution","map_default","a","get","this","vm","moType","$route","query","ip","path","jsonTime","heapMemory","nonHeapMemory","thread","timeRange","watch","newVal","length","heapMemoEcharts","toFixed","nonHeapMemoEcharts","threadEcharts","activated","getData","deactivated","clearInterval","methods","initData","setInterval","paras","$axios","method","url","Api","findAppAll","stringify_default","then","res","_res$data","arrayConcat","catch","error","$message","message","echartChange","item","initEcharts","option","_this","ids","$refs","style","tabWidth","clientWidth","$echarts","init","setOption","window","addEventListener","resize","dealAxisData","xAxis","yAxis","xAxisMax","map","push","dateFtt","Date","parseInt","maxValue","num","title","line","tooltip","trigger","left","top","textStyle","color","boundaryGap","type","axisLine","symbol","symbolOffset","lineStyle","axisTick","axisLabel","splitLine","show","formatter","series","name","itemStyle","core_CoreAppEcharts","render","_vm","_h","$createElement","_c","_self","staticClass","on","click","$event","$router","_v","domProps","textContent","_s","meta","staticStyle","line-height","$t","_l","key","class","chooseColor","attrs","size","directives","rawName","expression","ref","model","callback","$$v","label","span","num-data","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/21.6b3cd4343fe2427243c8.js","sourcesContent":["<template>\n  <!-- host图表 -->\n  <div class=\"core-echarts\">\n    <div class=\"detail-back\">\n        <a @click=\"$router.push({name:'coreList'})\"><i class=\"iconfont icon-fanhui\"></i>返回</a>\n        <span v-text=\"$route.meta.title + '-' + $route.query.moType + '-' + $route.query.ip\"></span>\n    </div>\n    <el-row class=\"rd_bottom\">\n      <span style=\"line-height:40px\">{{$t('echarts.timeSpan')+'：'}}</span>\n      <el-button size=\"mini\" @click=\"echartChange(item)\" v-for=\"item in date\" :key=\"item.value\" :class=\"{chooseColor: item.text === time.text}\">{{item.text}}\n      </el-button>\n    </el-row>\n    <div>\n      <span>时间：</span><span class=\"rd_time\">{{time.text}}</span>\n      <div ref=\"tabWidth\" v-loading=\"loading\">\n        <el-tabs v-model=\"tabName\">\n          <el-tab-pane :label=\"$t('coreAppEcharts.heapMemoTitle')\"\n                       name=\"heapMemoTitle\">\n            <el-row v-show=\"heapMemoShow\">\n              <el-col :span=\"8\">\n                <div ref=\"heap_memo_pie\" class=\"echarts\">\n                  <dc-num-show :num-data=\"heapMemoData\"></dc-num-show>\n                </div>\n              </el-col>\n              <el-col :span=\"16\">\n                <div ref=\"heap_memo_line\" class=\"echarts\"></div>\n              </el-col>\n            </el-row>\n            <el-row class=\"no-data\" v-show=\"!heapMemoShow\">\n              <el-col>暂无数据</el-col>\n            </el-row>\n          </el-tab-pane>\n          <el-tab-pane :label=\"$t('coreAppEcharts.nonHeapMemoTitle')\"\n                       name=\"nonHeapMemoTitle\">\n            <el-row v-show=\"nonHeapMemoShow\">\n              <el-col :span=\"8\">\n                <div ref=\"non_heap_memo_pie\" class=\"echarts\">\n                  <dc-num-show :num-data=\"nonHeapMemoData\"></dc-num-show>\n                </div>\n              </el-col>\n              <el-col :span=\"16\">\n                <div ref=\"non_heap_memo_line\" class=\"echarts\"></div>\n              </el-col>\n            </el-row>\n            <el-row class=\"no-data\" v-show=\"!nonHeapMemoShow\">\n              <el-col>暂无数据</el-col>\n            </el-row>\n          </el-tab-pane>\n          <el-tab-pane :label=\"$t('coreAppEcharts.threadTitle')\"\n                       name=\"threadTitle\">\n            <el-row v-show=\"threadShow\">\n              <el-col :span=\"8\">\n                <div ref=\"thread_pie\" class=\"echarts\">\n                  <dc-num-show :num-data=\"threadData\"></dc-num-show>\n                </div>\n              </el-col>\n              <el-col :span=\"16\">\n                <div ref=\"thread_line\" class=\"echarts\"></div>\n              </el-col>\n            </el-row>\n            <el-row class=\"no-data\" v-show=\"!threadShow\">\n              <el-col>暂无数据</el-col>\n            </el-row>\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n    </div>\n  </div>\n</template>\n<script type=\"text/ecmascript-6\">\n  import Api from '@/constants/Api.js'\n  import {\n    skill, dataRange\n  } from '@/utils/skill.js'\n  export default {\n    data() {\n      return {\n        date: dataRange,\n        time: {\n          'text': '1小时',\n          'value': 3600\n        },\n        resizeIds: [{\n          id: 'heap_memo_pie',\n          width: 30\n        }, {\n          id: 'heap_memo_line',\n          width: 70\n        }, {\n          id: 'non_heap_memo_pie',\n          width: 30\n        }, {\n          id: 'non_heap_memo_line',\n          width: 70\n        }, {\n          id: 'thread_pie',\n          width: 30\n        }, {\n          id: 'thread_line',\n          width: 70\n        }],\n        // 切换tab页面\n        tabName: 'heapMemoTitle',\n        timer: null, // 定时器控制\n        loading: false,\n        // 参数\n        heapMemoLast: -1,\n        nonHeapMemoLast: -1,\n        threadLast: -1,\n        // 数据\n        heapMemoAllData: [],\n        nonHeapMemoAllData: [],\n        threadAllData: [],\n        heapMemoShow: true,\n        nonHeapMemoShow: true,\n        threadShow: true,\n        heapMemoData: '',\n        nonHeapMemoData: '',\n        threadData: ''\n\n      }\n    },\n    computed: {\n      coreAppParams() {\n        let box = new Map([\n          [3600, 'time(30s)'],\n          [10800, 'time(1m)'],\n          [43200, 'time(3m)'],\n          [86400, 'time(5m)'],\n          [259200, 'time(15m)'],\n          [604800, 'time(30m)'],\n          [2592000, 'time(2h)'],\n          [15552000, 'time(12h)'],\n          [31536000, 'time(1d)']\n        ])\n        let resolution = box.get(this.time.value)\n        const vm = this\n        return {\n          'moType': vm.$route.query.moType,\n          'ip': vm.$route.query.ip,\n          'path': vm.$route.query.path,\n          'jsonTime': {\n            'heapMemory': vm.heapMemoLast,\n            'nonHeapMemory': vm.nonHeapMemoLast,\n            'thread': vm.threadLast\n          },\n          'resolution': resolution,\n          'timeRange': vm.heapMemoLast === -1 ? vm.time.value : 3600\n        }\n      }\n    },\n    watch: {\n      heapMemoAllData(newVal) {\n        if (newVal.length > 0) {\n          this.heapMemoShow = true\n          this.heapMemoLast = newVal[newVal.length - 1].time\n          this.heapMemoEcharts(newVal[newVal.length - 1].value.toFixed(2), newVal)\n        }\n      },\n      nonHeapMemoAllData(newVal) {\n        if (newVal.length > 0) {\n          this.nonHeapMemoShow = true\n          this.nonHeapMemoLast = newVal[newVal.length - 1].time\n          this.nonHeapMemoEcharts(newVal[newVal.length - 1].value.toFixed(2), newVal)\n        }\n      },\n      threadAllData(newVal) {\n        if (newVal.length > 0) {\n          this.threadShow = true\n          this.threadLast = newVal[newVal.length - 1].time\n          this.threadEcharts(newVal[newVal.length - 1].value.toFixed(2), newVal)\n        }\n      }\n    },\n    activated() {\n      if (this.$route.query) {\n        this.time = {\n          'text': '1小时',\n          'value': 3600\n        }\n        this.heapMemoAllData = []\n        this.nonHeapMemoAllData = []\n        this.threadAllData = []\n        this.heapMemoShow = false\n        this.nonHeapMemoShow = false\n        this.threadShow = false\n        this.heapMemoLast = -1\n        this.nonHeapMemoLast = -1\n        this.threadLast = -1\n        this.getData()\n      }\n    },\n    deactivated() {\n      clearInterval(this.timer)\n      this.timer = null\n    },\n    methods: {\n      getData() {\n        const vm = this\n        vm.loading = true\n        vm.initData(vm.coreAppParams)\n        vm.timer = setInterval(() => {\n          // console.log(vm.heapMemoLast)\n          vm.initData(vm.coreAppParams)\n        }, 30000)\n      },\n      initData(paras) {\n        const vm = this\n        vm.$axios({\n          method: 'post',\n          url: Api.findAppAll,\n          data: JSON.stringify(paras)\n        }).then(res => {\n          vm.loading = false\n          if (vm.coreAppParams.jsonTime.heapMemory === -1) {\n            let {heapMemory, nonHeapMemory, thread} = res.data\n            vm.heapMemoAllData = heapMemory || []\n            vm.nonHeapMemoAllData = nonHeapMemory || []\n            vm.threadAllData = thread || []\n          } else {\n            if (res.data.heapMemory && res.data.heapMemory.length > 0) {\n              vm.heapMemoAllData = skill.arrayConcat(vm.heapMemoAllData, res.data.heapMemory)\n            }\n            if (res.data.nonHeapMemory && res.data.nonHeapMemory.length > 0) {\n              vm.nonHeapMemoAllData = skill.arrayConcat(vm.nonHeapMemoAllData, res.data.nonHeapMemory)\n            }\n            if (res.data.thread && res.data.thread.length > 0) {\n              vm.threadAllData = skill.arrayConcat(vm.threadAllData, res.data.thread)\n            }\n          }\n        }).catch((error) => {\n          vm.loading = false\n          vm.$message.error(error.data.message || error.message || error)\n        })\n      },\n      // 选择变化\n      echartChange(item) {\n        clearInterval(this.timer)\n        this.timer = null\n        this.time = item\n        this.heapMemoAllData = []\n        this.nonHeapMemoAllData = []\n        this.threadAllData = []\n        this.heapMemoShow = false\n        this.nonHeapMemoShow = false\n        this.threadShow = false\n        this.heapMemoLast = -1\n        this.nonHeapMemoLast = -1\n        this.threadLast = -1\n        this.getData()\n      },\n      // 初始化ecahrts\n      initEcharts(id, option, width) {\n        // 基于准备好的dom，初始化echarts实例\n        let ids = this.$refs[id]\n        ids.style.width = this.$refs.tabWidth.clientWidth * (width / 100) + 'px' // 解决选项卡宽度失效问题\n        if (option !== null) {\n          this.$echarts.init(ids).setOption(option, true)\n        }\n        window.addEventListener('resize', () => {\n          ids.style.width = this.$refs.tabWidth.clientWidth * (width / 100) + 'px'\n          this.$echarts.init(ids).resize()\n        })\n      },\n      dealAxisData(xAxis, yAxis, xAxisMax, data) {\n        const vm = this\n        data.map(item => {\n          xAxis.push(vm.dateFtt('yyyy-MM-dd hh:mm:ss', new Date(parseInt(item.time))))\n          yAxis.push(item.value.toFixed(2))\n          if (xAxisMax !== null) {\n            xAxisMax.push(item.maxValue.toFixed(2))\n          }\n        })\n      },\n      // 堆内存统计\n      heapMemoEcharts(num, data) {\n        const vm = this\n        let xAxis = []\n        let yAxis = []\n        let xAxisMax = []\n        if (data.length > 0) {\n          vm.dealAxisData(xAxis, yAxis, xAxisMax, data)\n          vm.heapMemoData = {\n            title: '堆内存实时监控',\n            num: num + 'M',\n            time: xAxis[xAxis.length - 1]\n          }\n          let line = {\n            tooltip: {\n              trigger: 'axis'\n            },\n            title: {\n              text: '堆内存统计(M)',\n              left: 'center',\n              top: 10,\n              textStyle: {\n                color: '#000'\n              }\n            },\n            xAxis: {\n              boundaryGap: false,\n              type: 'category',\n              axisLine: {\n                symbol: ['none', 'arrow'],\n                symbolOffset: [0, 10], // 箭头位置\n                lineStyle: {\n                  color: '#1e98d3',\n                  width: 1 // 这里是为了突出显示加上的\n                }\n              },\n              axisTick: {\n                length: '0'\n              },\n              axisLabel: {\n                color: '#1e98d3'\n              },\n              splitLine: {\n                show: false\n              },\n              data: xAxis\n            },\n            yAxis: {\n              type: 'value',\n              axisLine: {\n                symbol: ['none', 'arrow'],\n                symbolOffset: [0, 10], // 箭头位置\n                lineStyle: {\n                  color: '#1e98d3',\n                  width: 1 // 这里是为了突出显示加上的\n                }\n              },\n              axisTick: {\n                length: '0'\n              },\n              axisLabel: {\n                formatter: '{value}(M)',\n                color: '#1e98d3'\n              },\n              splitLine: {\n                show: true,\n                color: '#fefefe'\n              }\n            },\n            series: [{\n              name: '当前值',\n              type: 'line',\n              itemStyle: {\n                color: '#67C23A',\n                lineStyle: {\n                  color: '#67C23A',\n                  width: 1\n                }\n              },\n              data: yAxis\n            },\n              {\n                name: '最大值',\n                type: 'line',\n                itemStyle: {\n                  color: '#409EFF',\n                  lineStyle: {\n                    color: '#67C23A',\n                    width: 1\n                  }\n                },\n                data: xAxisMax\n              }]\n          }\n          this.initEcharts('heap_memo_line', line, vm.resizeIds[1].width)\n          vm.heapMemoShow = true\n        } else {\n          vm.heapMemoShow = false\n        }\n      },\n      // 非堆内存统计\n      nonHeapMemoEcharts(num, data) {\n        const vm = this\n        let xAxis = []\n        let yAxis = []\n        let xAxisMax = []\n        if (data.length > 0) {\n          vm.dealAxisData(xAxis, yAxis, xAxisMax, data)\n          vm.nonHeapMemoData = {\n            title: '非堆内存实时监控',\n            num: num + 'M',\n            time: xAxis[xAxis.length - 1]\n          }\n          let line = {\n            tooltip: {\n              trigger: 'axis'\n            },\n            title: {\n              text: '非堆内存统计(M)',\n              left: 'center',\n              top: 10,\n              textStyle: {\n                color: '#000'\n              }\n            },\n            xAxis: {\n              boundaryGap: false,\n              type: 'category',\n              axisLine: {\n                symbol: ['none', 'arrow'],\n                symbolOffset: [0, 10], // 箭头位置\n                lineStyle: {\n                  color: '#1e98d3',\n                  width: 1 // 这里是为了突出显示加上的\n                }\n              },\n              axisTick: {\n                length: '0'\n              },\n              axisLabel: {\n                color: '#1e98d3'\n              },\n              data: xAxis\n            },\n            yAxis: {\n              type: 'value',\n              axisLine: {\n                symbol: ['none', 'arrow'],\n                symbolOffset: [0, 10], // 箭头位置\n                lineStyle: {\n                  color: '#1e98d3',\n                  width: 1 // 这里是为了突出显示加上的\n                }\n              },\n              axisTick: {\n                length: '0'\n              },\n              axisLabel: {\n                formatter: '{value}(M)',\n                color: '#1e98d3'\n              }\n            },\n            series: [{\n              name: '当前值',\n              type: 'line',\n              itemStyle: {\n                color: '#67C23A',\n                lineStyle: {\n                  color: '#67C23A',\n                  width: 1\n                }\n              },\n              data: yAxis\n            },\n              {\n                name: '最大值',\n                type: 'line',\n                itemStyle: {\n                  color: '#409EFF',\n                  lineStyle: {\n                    color: '#67C23A',\n                    width: 1\n                  }\n                },\n                data: xAxisMax\n              }]\n          }\n          this.initEcharts('non_heap_memo_line', line, vm.resizeIds[3].width)\n          vm.nonHeapMemoShow = true\n        } else {\n          vm.nonHeapMemoShow = false\n        }\n      },\n      // 线程数统计\n      threadEcharts(num, data) {\n        const vm = this\n        let xAxis = []\n        let yAxis = []\n        if (data.length > 0) {\n          vm.dealAxisData(xAxis, yAxis, null, data)\n          vm.threadData = {\n            title: '线程数实时监控',\n            num: parseInt(num).toFixed(0) + '个',\n            time: xAxis[xAxis.length - 1]\n          }\n          let line = {\n            tooltip: {\n              trigger: 'axis'\n            },\n            title: {\n              text: '线程数量统计(个)',\n              left: 'center',\n              top: 10,\n              textStyle: {\n                color: '#000'\n              }\n            },\n            xAxis: {\n              boundaryGap: false,\n              type: 'category',\n              axisLine: {\n                symbol: ['none', 'arrow'],\n                symbolOffset: [0, 10], // 箭头位置\n                lineStyle: {\n                  color: '#1e98d3',\n                  width: 1 // 这里是为了突出显示加上的\n                }\n              },\n              axisTick: {\n                length: '0'\n              },\n              axisLabel: {\n                color: '#1e98d3'\n              },\n              splitLine: {\n                show: false\n              },\n              data: xAxis\n            },\n            yAxis: {\n              type: 'value',\n              axisLine: {\n                symbol: ['none', 'arrow'],\n                symbolOffset: [0, 10], // 箭头位置\n                lineStyle: {\n                  color: '#1e98d3',\n                  width: 1 // 这里是为了突出显示加上的\n                }\n              },\n              axisTick: {\n                length: '0'\n              },\n              axisLabel: {\n                formatter: '{value}(个)',\n                color: '#1e98d3'\n              },\n              splitLine: {\n                show: true,\n                color: '#fefefe'\n              }\n            },\n            series: [{\n              name: '线程数量统计',\n              type: 'line',\n              itemStyle: {\n                color: '#67C23A',\n                lineStyle: {\n                  color: '#67C23A',\n                  width: 1\n                }\n              },\n              data: yAxis\n            }]\n          }\n          this.initEcharts('thread_line', line, vm.resizeIds[5].width)\n          vm.threadShow = true\n        } else {\n          vm.threadShow = false\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n  .core-echarts {\n    .chooseColor{\n      background: #85ce61;color:#fff;\n      border:none\n    }\n    .rd_bottom {\n      margin-bottom: 16px;\n      min-width: 1120px;\n    }\n    .rd_ht {\n      line-height: 40px;\n      font-size: 32px;\n    }\n    .echarts {\n      width: 100%;\n      display: inline-block;\n      height: 320px;\n    }\n    .rd_time {\n      line-height: 30px;\n      color: #67c23a;\n    }\n    .no-data {\n      text-align: center;\n      line-height: 320px;\n      height: 320px;\n      color: #ccc;\n      font-size: 18px;\n      font-weight: bolder;\n    }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/core/CoreAppEcharts.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"core-echarts\"},[_c('div',{staticClass:\"detail-back\"},[_c('a',{on:{\"click\":function($event){_vm.$router.push({name:'coreList'})}}},[_c('i',{staticClass:\"iconfont icon-fanhui\"}),_vm._v(\"返回\")]),_vm._v(\" \"),_c('span',{domProps:{\"textContent\":_vm._s(_vm.$route.meta.title + '-' + _vm.$route.query.moType + '-' + _vm.$route.query.ip)}})]),_vm._v(\" \"),_c('el-row',{staticClass:\"rd_bottom\"},[_c('span',{staticStyle:{\"line-height\":\"40px\"}},[_vm._v(_vm._s(_vm.$t('echarts.timeSpan')+'：'))]),_vm._v(\" \"),_vm._l((_vm.date),function(item){return _c('el-button',{key:item.value,class:{chooseColor: item.text === _vm.time.text},attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.echartChange(item)}}},[_vm._v(_vm._s(item.text)+\"\\n    \")])})],2),_vm._v(\" \"),_c('div',[_c('span',[_vm._v(\"时间：\")]),_c('span',{staticClass:\"rd_time\"},[_vm._v(_vm._s(_vm.time.text))]),_vm._v(\" \"),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"tabWidth\"},[_c('el-tabs',{model:{value:(_vm.tabName),callback:function ($$v) {_vm.tabName=$$v},expression:\"tabName\"}},[_c('el-tab-pane',{attrs:{\"label\":_vm.$t('coreAppEcharts.heapMemoTitle'),\"name\":\"heapMemoTitle\"}},[_c('el-row',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.heapMemoShow),expression:\"heapMemoShow\"}]},[_c('el-col',{attrs:{\"span\":8}},[_c('div',{ref:\"heap_memo_pie\",staticClass:\"echarts\"},[_c('dc-num-show',{attrs:{\"num-data\":_vm.heapMemoData}})],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":16}},[_c('div',{ref:\"heap_memo_line\",staticClass:\"echarts\"})])],1),_vm._v(\" \"),_c('el-row',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.heapMemoShow),expression:\"!heapMemoShow\"}],staticClass:\"no-data\"},[_c('el-col',[_vm._v(\"暂无数据\")])],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":_vm.$t('coreAppEcharts.nonHeapMemoTitle'),\"name\":\"nonHeapMemoTitle\"}},[_c('el-row',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.nonHeapMemoShow),expression:\"nonHeapMemoShow\"}]},[_c('el-col',{attrs:{\"span\":8}},[_c('div',{ref:\"non_heap_memo_pie\",staticClass:\"echarts\"},[_c('dc-num-show',{attrs:{\"num-data\":_vm.nonHeapMemoData}})],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":16}},[_c('div',{ref:\"non_heap_memo_line\",staticClass:\"echarts\"})])],1),_vm._v(\" \"),_c('el-row',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.nonHeapMemoShow),expression:\"!nonHeapMemoShow\"}],staticClass:\"no-data\"},[_c('el-col',[_vm._v(\"暂无数据\")])],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":_vm.$t('coreAppEcharts.threadTitle'),\"name\":\"threadTitle\"}},[_c('el-row',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.threadShow),expression:\"threadShow\"}]},[_c('el-col',{attrs:{\"span\":8}},[_c('div',{ref:\"thread_pie\",staticClass:\"echarts\"},[_c('dc-num-show',{attrs:{\"num-data\":_vm.threadData}})],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":16}},[_c('div',{ref:\"thread_line\",staticClass:\"echarts\"})])],1),_vm._v(\" \"),_c('el-row',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.threadShow),expression:\"!threadShow\"}],staticClass:\"no-data\"},[_c('el-col',[_vm._v(\"暂无数据\")])],1)],1)],1)],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-82b2a03e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/core/CoreAppEcharts.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-82b2a03e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CoreAppEcharts.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CoreAppEcharts.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CoreAppEcharts.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-82b2a03e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CoreAppEcharts.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-82b2a03e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/core/CoreAppEcharts.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}